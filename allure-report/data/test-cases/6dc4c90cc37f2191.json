{"uid":"6dc4c90cc37f2191","name":"test_authorization_valid","fullName":"test_authorization.TestAuthorization#test_authorization_valid","historyId":"6a6bb78025248288cbb402056f5aacc9","time":{"start":1662846859133,"stop":1662846871406,"duration":12273},"description":"Валидное тестирование Авторизации.\n        На сайте стоит ограничение на 10 авторизаций. После интервал = 10 минут","descriptionHtml":"<p>Валидное тестирование Авторизации.<br />\nНа сайте стоит ограничение на 10 авторизаций. После интервал = 10 минут</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Can't find element by locator ('xpath', '//span[contains(text(), \"Личный кабинет\")]') >> Page didn't load! Restart test please!\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00A178B3+2193587]\n\tOrdinal0 [0x009B0681+1771137]\n\tOrdinal0 [0x008C41A8+803240]\n\tOrdinal0 [0x008F24A0+992416]\n\tOrdinal0 [0x008F273B+993083]\n\tOrdinal0 [0x0091F7C2+1177538]\n\tOrdinal0 [0x0090D7F4+1103860]\n\tOrdinal0 [0x0091DAE2+1170146]\n\tOrdinal0 [0x0090D5C6+1103302]\n\tOrdinal0 [0x008E77E0+948192]\n\tOrdinal0 [0x008E86E6+952038]\n\tGetHandleVerifier [0x00CC0CB2+2738370]\n\tGetHandleVerifier [0x00CB21B8+2678216]\n\tGetHandleVerifier [0x00AA17AA+512954]\n\tGetHandleVerifier [0x00AA0856+509030]\n\tOrdinal0 [0x009B743B+1799227]\n\tOrdinal0 [0x009BBB68+1817448]\n\tOrdinal0 [0x009BBC55+1817685]\n\tOrdinal0 [0x009C5230+1856048]\n\tBaseThreadInitThunk [0x764EFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C57A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C57A6E+238]","statusTrace":"self = <tests.test_authorization.TestAuthorization object at 0x0000022B9514B190>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a1e95e615afc03a0c85dbe749bd90740\")>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_authorization_valid(self, browser):\n        \"\"\"Валидное тестирование Авторизации.\n        На сайте стоит ограничение на 10 авторизаций. После интервал = 10 минут\"\"\"\n        driver = browser\n        # Импортируем действия и открываем сайт:\n        page = AuthPage(driver)\n        result_status = \"\"\n        try:\n            page.enter_on_site()\n            p = TestAuthorization()\n            email = p.email_reg  # импортируем email_reg и сохраняем в переменную email\n            passw = p.password  # импортируем password и сохраняем в passw\n            # Нажимаем на кнопку Войти:\n            page.btn_click_enter()\n            driver.implicitly_wait(3)\n            # Нажимаем на кнопку Другой способ:\n            page.btn_click_way()\n            # driver.implicitly_wait(3)\n            # Нажимаем на кнопку По паролю:\n            page.btn_click_bypass()\n            # driver.implicitly_wait(3)\n            # Вводим адрес почты/Email. Если тест регистрации не запускался\n            # (т.е. данные из Faker != settings), берём валидные данные из файла settings:\n            if email == valid_email:\n                mail, site_pass = email, passw\n            else:\n                mail, site_pass = valid_email, valid_password\n            page.enter_email(mail)\n            # Вводим пароль/Password:\n            page.enter_pass(site_pass)\n            # driver.implicitly_wait(3)\n            # Нажимаем на кнопку Войти:\n            page.btn_click_login()\n            # Проверяем, что мы прошли авторизацию и зашли в Личный кабинет:\n            # Так как элемент перекрывается всплывающим меню (NameUser), для клика по нему используем JS.\n            # driver.implicitly_wait(3)  # установка неявного ожидания\n>           driver.execute_script(\"arguments[0].click();\", page.btn_click_user())\n\ntests\\test_authorization.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\PageAutho.py:101: in btn_click_user\n    btn_user = self.find_element(LocatorsProject.REG_bUSER)\npages\\BaseApp.py:14: in find_element\n    return WebDriverWait(self.driver, time).until(EC.presence_of_element_located(locator),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a1e95e615afc03a0c85dbe749bd90740\")>, method = <function presence_of_element_located.<locals>._predicate at 0x0000022B93DFD820>\nmessage = 'Can\\'t find element by locator (\\'xpath\\', \\'//span[contains(text(), \"Личный кабинет\")]\\') >> Page didn\\'t load! Restart test please!'\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Can't find element by locator ('xpath', '//span[contains(text(), \"Личный кабинет\")]') >> Page didn't load! Restart test please!\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00A178B3+2193587]\nE       \tOrdinal0 [0x009B0681+1771137]\nE       \tOrdinal0 [0x008C41A8+803240]\nE       \tOrdinal0 [0x008F24A0+992416]\nE       \tOrdinal0 [0x008F273B+993083]\nE       \tOrdinal0 [0x0091F7C2+1177538]\nE       \tOrdinal0 [0x0090D7F4+1103860]\nE       \tOrdinal0 [0x0091DAE2+1170146]\nE       \tOrdinal0 [0x0090D5C6+1103302]\nE       \tOrdinal0 [0x008E77E0+948192]\nE       \tOrdinal0 [0x008E86E6+952038]\nE       \tGetHandleVerifier [0x00CC0CB2+2738370]\nE       \tGetHandleVerifier [0x00CB21B8+2678216]\nE       \tGetHandleVerifier [0x00AA17AA+512954]\nE       \tGetHandleVerifier [0x00AA0856+509030]\nE       \tOrdinal0 [0x009B743B+1799227]\nE       \tOrdinal0 [0x009BBB68+1817448]\nE       \tOrdinal0 [0x009BBC55+1817685]\nE       \tOrdinal0 [0x009C5230+1856048]\nE       \tBaseThreadInitThunk [0x764EFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C57A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C57A6E+238]\n\nverv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1662846839053,"stop":1662846839095,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"browser","time":{"start":1662846839096,"stop":1662846843183,"duration":4087},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1662846839096,"stop":1662846839096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"base_url","time":{"start":1662846839096,"stop":1662846839096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"sensitive_url","time":{"start":1662846843183,"stop":1662846843183,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_skip_sensitive","time":{"start":1662846859133,"stop":1662846859133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"Валидное тестирование Авторизации.\n        На сайте стоит ограничение на 10 авторизаций. После интервал = 10 минут","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Can't find element by locator ('xpath', '//span[contains(text(), \"Личный кабинет\")]') >> Page didn't load! Restart test please!\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00A178B3+2193587]\n\tOrdinal0 [0x009B0681+1771137]\n\tOrdinal0 [0x008C41A8+803240]\n\tOrdinal0 [0x008F24A0+992416]\n\tOrdinal0 [0x008F273B+993083]\n\tOrdinal0 [0x0091F7C2+1177538]\n\tOrdinal0 [0x0090D7F4+1103860]\n\tOrdinal0 [0x0091DAE2+1170146]\n\tOrdinal0 [0x0090D5C6+1103302]\n\tOrdinal0 [0x008E77E0+948192]\n\tOrdinal0 [0x008E86E6+952038]\n\tGetHandleVerifier [0x00CC0CB2+2738370]\n\tGetHandleVerifier [0x00CB21B8+2678216]\n\tGetHandleVerifier [0x00AA17AA+512954]\n\tGetHandleVerifier [0x00AA0856+509030]\n\tOrdinal0 [0x009B743B+1799227]\n\tOrdinal0 [0x009BBB68+1817448]\n\tOrdinal0 [0x009BBC55+1817685]\n\tOrdinal0 [0x009C5230+1856048]\n\tBaseThreadInitThunk [0x764EFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C57A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C57A6E+238]","statusTrace":"self = <tests.test_authorization.TestAuthorization object at 0x0000022B9514B190>, browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a1e95e615afc03a0c85dbe749bd90740\")>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_authorization_valid(self, browser):\n        \"\"\"Валидное тестирование Авторизации.\n        На сайте стоит ограничение на 10 авторизаций. После интервал = 10 минут\"\"\"\n        driver = browser\n        # Импортируем действия и открываем сайт:\n        page = AuthPage(driver)\n        result_status = \"\"\n        try:\n            page.enter_on_site()\n            p = TestAuthorization()\n            email = p.email_reg  # импортируем email_reg и сохраняем в переменную email\n            passw = p.password  # импортируем password и сохраняем в passw\n            # Нажимаем на кнопку Войти:\n            page.btn_click_enter()\n            driver.implicitly_wait(3)\n            # Нажимаем на кнопку Другой способ:\n            page.btn_click_way()\n            # driver.implicitly_wait(3)\n            # Нажимаем на кнопку По паролю:\n            page.btn_click_bypass()\n            # driver.implicitly_wait(3)\n            # Вводим адрес почты/Email. Если тест регистрации не запускался\n            # (т.е. данные из Faker != settings), берём валидные данные из файла settings:\n            if email == valid_email:\n                mail, site_pass = email, passw\n            else:\n                mail, site_pass = valid_email, valid_password\n            page.enter_email(mail)\n            # Вводим пароль/Password:\n            page.enter_pass(site_pass)\n            # driver.implicitly_wait(3)\n            # Нажимаем на кнопку Войти:\n            page.btn_click_login()\n            # Проверяем, что мы прошли авторизацию и зашли в Личный кабинет:\n            # Так как элемент перекрывается всплывающим меню (NameUser), для клика по нему используем JS.\n            # driver.implicitly_wait(3)  # установка неявного ожидания\n>           driver.execute_script(\"arguments[0].click();\", page.btn_click_user())\n\ntests\\test_authorization.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\PageAutho.py:101: in btn_click_user\n    btn_user = self.find_element(LocatorsProject.REG_bUSER)\npages\\BaseApp.py:14: in find_element\n    return WebDriverWait(self.driver, time).until(EC.presence_of_element_located(locator),\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a1e95e615afc03a0c85dbe749bd90740\")>, method = <function presence_of_element_located.<locals>._predicate at 0x0000022B93DFD820>\nmessage = 'Can\\'t find element by locator (\\'xpath\\', \\'//span[contains(text(), \"Личный кабинет\")]\\') >> Page didn\\'t load! Restart test please!'\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Can't find element by locator ('xpath', '//span[contains(text(), \"Личный кабинет\")]') >> Page didn't load! Restart test please!\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00A178B3+2193587]\nE       \tOrdinal0 [0x009B0681+1771137]\nE       \tOrdinal0 [0x008C41A8+803240]\nE       \tOrdinal0 [0x008F24A0+992416]\nE       \tOrdinal0 [0x008F273B+993083]\nE       \tOrdinal0 [0x0091F7C2+1177538]\nE       \tOrdinal0 [0x0090D7F4+1103860]\nE       \tOrdinal0 [0x0091DAE2+1170146]\nE       \tOrdinal0 [0x0090D5C6+1103302]\nE       \tOrdinal0 [0x008E77E0+948192]\nE       \tOrdinal0 [0x008E86E6+952038]\nE       \tGetHandleVerifier [0x00CC0CB2+2738370]\nE       \tGetHandleVerifier [0x00CB21B8+2678216]\nE       \tGetHandleVerifier [0x00AA17AA+512954]\nE       \tGetHandleVerifier [0x00AA0856+509030]\nE       \tOrdinal0 [0x009B743B+1799227]\nE       \tOrdinal0 [0x009BBB68+1817448]\nE       \tOrdinal0 [0x009BBC55+1817685]\nE       \tOrdinal0 [0x009C5230+1856048]\nE       \tBaseThreadInitThunk [0x764EFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C57A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C57A6E+238]\n\nverv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException","steps":[],"attachments":[{"uid":"3e5a43395143bc46","name":"log","source":"3e5a43395143bc46.txt","type":"text/plain","size":1517}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"browser::0","time":{"start":1662846871523,"stop":1662846889828,"duration":18305},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"suite","value":"test_authorization"},{"name":"subSuite","value":"TestAuthorization"},{"name":"host","value":"HOME"},{"name":"thread","value":"7632-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_authorization"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"6dc4c90cc37f2191.json","parameterValues":[]}