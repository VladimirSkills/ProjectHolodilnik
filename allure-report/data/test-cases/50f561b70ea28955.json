{"uid":"50f561b70ea28955","name":"test_add_limit_goods[60]","fullName":"test_card_basket#test_add_limit_goods","historyId":"47b5daee52d920e291544d173737ec00","time":{"start":1662925555703,"stop":1662925565119,"duration":9416},"description":"Тестируем наличие лимита при добавлении одного и того же товара в корзину","descriptionHtml":"<p>Тестируем наличие лимита при добавлении одного и того же товара в корзину</p>\n","status":"failed","statusMessage":"AssertionError: assert 60 == 50\n +  where 50 = int('50')","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"de5e9dda1baf7068843bf0ed54dd88c7\")>, value = 60\n\n    @pytest.mark.parametrize(\"value\", [10, 30, 50, 60])\n    def test_add_limit_goods(browser, value):\n        \"\"\"Тестируем наличие лимита при добавлении одного и того же товара в корзину\"\"\"\n        driver = browser\n        main_page = MainPage(driver)\n        page = ProductCardBasket(driver)\n        result_status = \"\"\n        try:\n            page.enter_on_site()\n            # Нажимаем на кнопку Каталог:\n            main_page.btn_click_catalog()\n            # Наводим мышь на элемент Смартфоны и гаджеты:\n            smartphones = main_page.find_elem_smartphones()\n            ActionChains(driver).move_to_element(smartphones).perform()  # наводим мышь\n            # Наводим мышь на элемент Смартфоны:\n            smartphonprod = main_page.find_elem_smartphonprod()\n            ActionChains(driver).move_to_element(smartphonprod).perform()  # наводим мышь\n            smartphonprod.click()\n            # Скроллим до первого элемента:\n            baskets = page.find_elem_baskets()\n            driver.execute_script(\"arguments[0].scrollIntoView();\", baskets)\n            # Добавляем первый товар в корзину:\n            page.find_elem_baskets().click()\n            # Нажимаем Перейти в корзину:\n            page.btn_click_inbasket2().click()\n            # Очищаем поле для указания кол-во товаров:\n            numbergoods = page.find_elem_numbergoods()\n            numbergoods.click()\n            ActionChains(driver).key_down(Keys.CONTROL).send_keys('a').key_up(Keys.CONTROL).perform()  # выделение\n            ActionChains(driver).key_down(Keys.BACKSPACE).key_up(Keys.BACKSPACE).perform()  # удаление\n            numbergoods.send_keys(value)\n            ActionChains(driver).key_down(Keys.CONTROL).send_keys(Keys.ENTER).key_up(Keys.CONTROL).perform()  # Enter\n            time.sleep(2)\n            driver.refresh()\n            numbergoods = page.find_elem_numbergoods()\n            numbergoods.click()\n            value2 = numbergoods.get_attribute('value')\n            # Проверяем, что указанные значения валидны:\n>           assert value == int(value2)\nE           AssertionError: assert 60 == 50\nE            +  where 50 = int('50')\n\ntests\\test_card_basket.py:557: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1662925518188,"stop":1662925518251,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1662925518251,"stop":1662925518251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1662925518251,"stop":1662925518251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"browser","time":{"start":1662925518251,"stop":1662925522409,"duration":4158},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"sensitive_url","time":{"start":1662925522409,"stop":1662925522409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"_skip_sensitive","time":{"start":1662925555702,"stop":1662925555702,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"time_delta_teardown","time":{"start":1662925555702,"stop":1662925555702,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Тестируем наличие лимита при добавлении одного и того же товара в корзину","status":"failed","statusMessage":"AssertionError: assert 60 == 50\n +  where 50 = int('50')","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"de5e9dda1baf7068843bf0ed54dd88c7\")>, value = 60\n\n    @pytest.mark.parametrize(\"value\", [10, 30, 50, 60])\n    def test_add_limit_goods(browser, value):\n        \"\"\"Тестируем наличие лимита при добавлении одного и того же товара в корзину\"\"\"\n        driver = browser\n        main_page = MainPage(driver)\n        page = ProductCardBasket(driver)\n        result_status = \"\"\n        try:\n            page.enter_on_site()\n            # Нажимаем на кнопку Каталог:\n            main_page.btn_click_catalog()\n            # Наводим мышь на элемент Смартфоны и гаджеты:\n            smartphones = main_page.find_elem_smartphones()\n            ActionChains(driver).move_to_element(smartphones).perform()  # наводим мышь\n            # Наводим мышь на элемент Смартфоны:\n            smartphonprod = main_page.find_elem_smartphonprod()\n            ActionChains(driver).move_to_element(smartphonprod).perform()  # наводим мышь\n            smartphonprod.click()\n            # Скроллим до первого элемента:\n            baskets = page.find_elem_baskets()\n            driver.execute_script(\"arguments[0].scrollIntoView();\", baskets)\n            # Добавляем первый товар в корзину:\n            page.find_elem_baskets().click()\n            # Нажимаем Перейти в корзину:\n            page.btn_click_inbasket2().click()\n            # Очищаем поле для указания кол-во товаров:\n            numbergoods = page.find_elem_numbergoods()\n            numbergoods.click()\n            ActionChains(driver).key_down(Keys.CONTROL).send_keys('a').key_up(Keys.CONTROL).perform()  # выделение\n            ActionChains(driver).key_down(Keys.BACKSPACE).key_up(Keys.BACKSPACE).perform()  # удаление\n            numbergoods.send_keys(value)\n            ActionChains(driver).key_down(Keys.CONTROL).send_keys(Keys.ENTER).key_up(Keys.CONTROL).perform()  # Enter\n            time.sleep(2)\n            driver.refresh()\n            numbergoods = page.find_elem_numbergoods()\n            numbergoods.click()\n            value2 = numbergoods.get_attribute('value')\n            # Проверяем, что указанные значения валидны:\n>           assert value == int(value2)\nE           AssertionError: assert 60 == 50\nE            +  where 50 = int('50')\n\ntests\\test_card_basket.py:557: AssertionError","steps":[],"attachments":[{"uid":"521dde54fc20f988","name":"log","source":"521dde54fc20f988.txt","type":"text/plain","size":1517},{"uid":"d07d79cf019033b2","name":"stdout","source":"d07d79cf019033b2.txt","type":"text/plain","size":101}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"time_delta_teardown::0","time":{"start":1662925565229,"stop":1662925565229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"browser::0","time":{"start":1662925565230,"stop":1662925583602,"duration":18372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"suite","value":"test_card_basket"},{"name":"host","value":"HOME"},{"name":"thread","value":"9988-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_card_basket"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"value","value":"60"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"50f561b70ea28955.json","parameterValues":["60"]}